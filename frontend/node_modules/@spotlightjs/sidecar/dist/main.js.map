{"version":3,"file":"main.js","sources":["../src/contextlines.ts","../src/logger.ts","../src/messageBuffer.ts","../src/main.ts"],"sourcesContent":["import { readFileSync } from \"node:fs\";\nimport type { IncomingMessage, ServerResponse } from \"node:http\";\nimport * as os from \"node:os\";\nimport * as path from \"node:path\";\nimport { LEAST_UPPER_BOUND, TraceMap, originalPositionFor, sourceContentFor } from \"@jridgewell/trace-mapping\";\n\ntype SourceContext = {\n  pre_context?: string[];\n  context_line?: string;\n  post_context?: string[];\n};\n\ntype SentryStackFrame = {\n  filename?: string;\n  lineno?: number;\n  colno?: number;\n} & SourceContext;\n\ntype ValidSentryStackFrame = Required<SentryStackFrame>;\n\ntype SentryStackTrace = {\n  frames?: SentryStackFrame[];\n};\n\nasync function getGeneratedCodeFromServer(filename: string): Promise<string | undefined> {\n  try {\n    const generatedCodeResponse = await fetch(filename);\n    return generatedCodeResponse.text();\n  } catch {\n    return undefined;\n  }\n}\n\nfunction parseStackTrace(requestBody: string): SentryStackTrace | undefined {\n  try {\n    return JSON.parse(requestBody) as SentryStackTrace;\n  } catch {\n    return undefined;\n  }\n}\n\nfunction applySourceContextToFrame(sourceMapContent: string, frame: ValidSentryStackFrame) {\n  const tracer = new TraceMap(JSON.parse(sourceMapContent));\n\n  const originalPosition = originalPositionFor(tracer, {\n    line: frame.lineno,\n    column: frame.colno,\n    bias: LEAST_UPPER_BOUND,\n  });\n\n  if (originalPosition.source && originalPosition.line && originalPosition.column) {\n    frame.lineno = originalPosition.line;\n    frame.colno = originalPosition.column;\n    const filePath = new URL(frame.filename).pathname.slice(1); // slice(1) is to not make it absolute path\n    frame.filename = path.resolve(path.join(path.dirname(filePath), originalPosition.source));\n\n    const content = sourceContentFor(tracer, originalPosition.source);\n    const lines = content?.split(os.EOL) ?? [];\n    addContextLinesToFrame(lines, frame);\n  }\n\n  return originalPosition;\n}\n\nfunction addContextLinesToFrame(lines: string[], frame: ValidSentryStackFrame, linesOfContext = 5): void {\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += \" {snip}\";\n  }\n\n  return newLine;\n}\n\nfunction isValidSentryStackFrame(frame: SentryStackFrame): frame is ValidSentryStackFrame {\n  return !!frame.filename && !!frame.lineno && !!frame.colno;\n}\n\nexport function contextLinesHandler(req: IncomingMessage, res: ServerResponse) {\n  // We're only interested in handling a PUT request\n  if (req.method !== \"PUT\") {\n    res.writeHead(405);\n    res.end();\n    return;\n  }\n\n  let requestBody = \"\";\n  req.on(\"data\", chunk => {\n    requestBody += chunk;\n  });\n\n  req.on(\"end\", async () => {\n    const stacktrace = parseStackTrace(requestBody);\n\n    if (!stacktrace) {\n      res.writeHead(500);\n      res.end();\n      return;\n    }\n\n    for (const frame of stacktrace.frames ?? []) {\n      if (\n        !isValidSentryStackFrame(frame) ||\n        // let's ignore dependencies for now with this naive check\n        frame.filename.includes(\"/node_modules/\")\n      ) {\n        continue;\n      }\n      const { filename } = frame;\n      // Dirty check to see if this looks like a regular file path or a URL\n      if (filename.includes(\"://\")) {\n        const generatedCode = await getGeneratedCodeFromServer(frame.filename);\n        if (!generatedCode) {\n          continue;\n        }\n\n        // Extract the inline source map from the minified code\n        const inlineSourceMapMatch = generatedCode.match(/\\/\\/# sourceMappingURL=data:application\\/json;base64,(.*)/);\n\n        if (inlineSourceMapMatch?.[1]) {\n          const sourceMapBase64 = inlineSourceMapMatch[1];\n          const sourceMapContent = Buffer.from(sourceMapBase64, \"base64\").toString(\"utf-8\");\n          applySourceContextToFrame(sourceMapContent, frame);\n        }\n      } else if (!filename.includes(\":\")) {\n        try {\n          const lines = readFileSync(filename, { encoding: \"utf-8\" }).split(/\\r?\\n/);\n          addContextLinesToFrame(lines, frame);\n        } catch (err) {\n          if ((err as NodeJS.ErrnoException).code !== \"ENOENT\") {\n            throw err;\n          }\n        }\n      }\n    }\n\n    const responseJson = JSON.stringify(stacktrace);\n\n    res.writeHead(200, { \"Content-Type\": \"application/json\" });\n    res.end(responseJson);\n  });\n}\n","export type SidecarLogger = {\n  info: (message: string) => void;\n  warn: (message: string) => void;\n  error: (message: string) => void;\n  debug: (message: string) => void;\n};\n\nconst defaultLogger: SidecarLogger = {\n  info: (message: string) => console.log(\"🔎 [Spotlight]\", message),\n  warn: (message: string) => console.warn(\"🔎 [Spotlight]\", message),\n  error: (message: string) => console.error(\"🔎 [Spotlight]\", message),\n  debug: (message: string) => debugEnabled && console.debug(\"🔎 [Spotlight]\", message),\n};\n\nlet injectedLogger: SidecarLogger | undefined = undefined;\nlet debugEnabled = false;\n\nexport function activateLogger(logger: SidecarLogger): void {\n  injectedLogger = logger;\n}\n\nexport function enableDebugLogging(debug: boolean): void {\n  debugEnabled = debug;\n}\n\nexport const logger = {\n  info: (message: string) => (injectedLogger || defaultLogger).info(message),\n  warn: (message: string) => (injectedLogger || defaultLogger).warn(message),\n  error: (message: string) => (injectedLogger || defaultLogger).error(message),\n  debug: (message: string) => (injectedLogger || defaultLogger).debug(message),\n};\n","export class MessageBuffer<T> {\n  private size: number;\n  private items: [number, T][];\n  private writePos = 0;\n  private head = 0;\n  private timeout = 10;\n  private readers = new Map<string, (item: T) => void>();\n\n  constructor(size = 100) {\n    this.size = size;\n    this.items = new Array(size);\n  }\n\n  put(item: T): void {\n    const curTime = new Date().getTime();\n    this.items[this.writePos % this.size] = [curTime, item];\n    this.writePos += 1;\n    if (this.head === this.writePos) {\n      this.head += 1;\n    }\n\n    const minTime = curTime - this.timeout * 1000;\n    let atItem: [number, T] | undefined;\n    while (this.head < this.writePos) {\n      atItem = this.items[this.head % this.size];\n      if (atItem === undefined) break;\n      if (atItem[0] > minTime) break;\n      this.head += 1;\n    }\n  }\n\n  subscribe(callback: (item: T) => void): string {\n    const readerId = generateUuidv4();\n    this.readers.set(readerId, callback);\n    setTimeout(() => this.stream(readerId));\n    return readerId;\n  }\n\n  unsubscribe(readerId: string): void {\n    this.readers.delete(readerId);\n  }\n\n  stream(readerId: string, readPos = this.head): void {\n    const cb = this.readers.get(readerId);\n    if (!cb) return;\n\n    let atReadPos = readPos;\n    let item: [number, T] | undefined;\n    /* eslint-disable no-constant-condition */\n    while (true) {\n      item = this.items[atReadPos % this.size];\n      // atReadPos >= this.writePos prevents the case where we have a full buffer\n      if (typeof item === \"undefined\" || atReadPos >= this.writePos) {\n        break;\n      }\n      cb(item[1]);\n      atReadPos += 1;\n    }\n\n    setTimeout(() => this.stream(readerId, atReadPos), 500);\n  }\n\n  clear(): void {\n    this.items = new Array(this.size);\n    this.writePos = 0;\n    this.head = 0;\n    this.readers = new Map<string, (item: T) => void>();\n  }\n}\n\nfunction generateUuidv4(): string {\n  let dt = new Date().getTime();\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, c => {\n    let rnd = Math.random() * 16;\n    rnd = ((dt + rnd) % 16) | 0;\n    dt = Math.floor(dt / 16);\n    return (c === \"x\" ? rnd : (rnd & 0x3) | 0x8).toString(16);\n  });\n}\n","import { createWriteStream, readFileSync } from \"node:fs\";\nimport { type IncomingMessage, type Server, type ServerResponse, createServer, get } from \"node:http\";\nimport { extname, join, resolve } from \"node:path\";\nimport { createGunzip, createInflate } from \"node:zlib\";\nimport { addEventProcessor, captureException, getTraceData, startSpan } from \"@sentry/node\";\nimport launchEditor from \"launch-editor\";\nimport { CONTEXT_LINES_ENDPOINT, DEFAULT_PORT, SERVER_IDENTIFIER } from \"./constants.js\";\nimport { contextLinesHandler } from \"./contextlines.js\";\nimport { type SidecarLogger, activateLogger, enableDebugLogging, logger } from \"./logger.js\";\nimport { MessageBuffer } from \"./messageBuffer.js\";\n\ntype Payload = [string, Buffer];\n\ntype IncomingPayloadCallback = (body: string) => void;\n\ntype SideCarOptions = {\n  /**\n   * The port on which the sidecar should listen.\n   * Defaults to 8969.\n   */\n  port?: string | number;\n\n  /**\n   * A logger that implements the SidecarLogger interface.\n   * Use this to inject your custom logger implementation.\n   *\n   * @default - a simple logger logging to the console.\n   */\n  logger?: SidecarLogger;\n\n  /**\n   * The base path from where the static files should be served.\n   */\n  basePath?: string;\n\n  filesToServe?: Record<string, Buffer>;\n\n  /**\n   * More verbose logging.\n   */\n  debug?: boolean;\n\n  /**\n   * A callback that will be called with the incoming message.\n   * Helpful for debugging.\n   */\n  incomingPayload?: IncomingPayloadCallback;\n\n  isStandalone?: boolean;\n};\n\ntype RequestHandler = (\n  req: IncomingMessage,\n  res: ServerResponse,\n  pathname?: string,\n  searchParams?: URLSearchParams,\n) => void;\n\nconst withTracing =\n  (fn: CallableFunction, spanArgs = {}) =>\n  (...args: unknown[]) =>\n    startSpan({ name: fn.name, ...spanArgs }, () => fn(...args));\n\nconst CORS_HEADERS = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Access-Control-Allow-Credentials\": \"true\",\n  \"Access-Control-Allow-Headers\": \"*\",\n  \"Access-Control-Allow-Methods\": \"GET,POST,PUT,OPTIONS,DELETE,PATCH\",\n} as const;\n\nconst SPOTLIGHT_HEADERS = {\n  \"X-Powered-by\": SERVER_IDENTIFIER,\n} as const;\n\nconst enableCORS = (handler: RequestHandler): RequestHandler =>\n  withTracing(\n    (req: IncomingMessage, res: ServerResponse, pathname?: string, searchParams?: URLSearchParams) => {\n      const headers = {\n        ...CORS_HEADERS,\n        ...SPOTLIGHT_HEADERS,\n      };\n      for (const [header, value] of Object.entries(headers)) {\n        res.setHeader(header, value);\n      }\n      if (req.method === \"OPTIONS\") {\n        res.writeHead(204, {\n          \"Cache-Control\": \"no-cache\",\n        });\n        res.end();\n        return;\n      }\n      return handler(req, res, pathname, searchParams);\n    },\n    { name: \"enableCORS\", op: \"sidecar.http.middleware.cors\" },\n  );\n\nconst streamRequestHandler = (buffer: MessageBuffer<Payload>, incomingPayload?: IncomingPayloadCallback) => {\n  return function handleStreamRequest(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname?: string,\n    searchParams?: URLSearchParams,\n  ): void {\n    if (\n      req.method === \"GET\" &&\n      req.headers.accept &&\n      req.headers.accept === \"text/event-stream\" &&\n      pathname === \"/stream\"\n    ) {\n      res.writeHead(200, {\n        \"Content-Type\": \"text/event-stream\",\n        \"Cache-Control\": \"no-cache\",\n        Connection: \"keep-alive\",\n      });\n      res.flushHeaders();\n      // Send something in the body to trigger the `open` event\n      // This is mostly for Firefox -- see getsentry/spotlight#376\n      res.write(\"\\n\");\n\n      const useBase64 = searchParams?.get(\"base64\") != null;\n      const base64Indicator = useBase64 ? \";base64\" : \"\";\n      const dataWriter = useBase64\n        ? (data: Buffer) => res.write(`data:${data.toString(\"base64\")}\\n`)\n        : (data: Buffer) => {\n            // The utf-8 encoding here is wrong and is a hack as we are\n            // sending binary data as utf-8 over SSE which enforces utf-8\n            // encoding. This is only for backwards compatibility\n            for (const line of data.toString(\"utf-8\").split(\"\\n\")) {\n              // This is very important - SSE events are delimited by two newlines\n              res.write(`data:${line}\\n`);\n            }\n          };\n      const sub = buffer.subscribe(([payloadType, data]) => {\n        logger.debug(\"🕊️ sending to Spotlight\");\n        res.write(`event:${payloadType}${base64Indicator}\\n`);\n        dataWriter(data);\n        // This last \\n is important as every message ends with an empty line in SSE\n        res.write(\"\\n\");\n      });\n\n      req.on(\"close\", () => {\n        buffer.unsubscribe(sub);\n        res.end();\n      });\n    } else if (req.method === \"POST\") {\n      logger.debug(\"📩 Received event\");\n      let stream = req;\n      // Check for gzip or deflate encoding and create appropriate stream\n      const encoding = req.headers[\"content-encoding\"];\n      if (encoding === \"gzip\") {\n        // @ts-ignore\n        stream = req.pipe(createGunzip());\n      } else if (encoding === \"deflate\") {\n        // @ts-ignore\n        stream = req.pipe(createInflate());\n      }\n      // TODO: Add brotli and zstd support!\n\n      // Read the (potentially decompressed) stream\n      const buffers: Buffer[] = [];\n      stream.on(\"readable\", () => {\n        while (true) {\n          const chunk = stream.read();\n          if (chunk === null) {\n            break;\n          }\n          buffers.push(chunk);\n        }\n      });\n\n      stream.on(\"end\", () => {\n        const body = Buffer.concat(buffers);\n        let contentType = req.headers[\"content-type\"]?.split(\";\")[0].toLocaleLowerCase();\n        if (searchParams?.get(\"sentry_client\")?.startsWith(\"sentry.javascript.browser\") && req.headers.origin) {\n          // This is a correction we make as Sentry Browser SDK may send messages with text/plain to avoid CORS issues\n          contentType = \"application/x-sentry-envelope\";\n        }\n        if (!contentType) {\n          logger.warn(\"No content type, skipping payload...\");\n        } else {\n          buffer.put([contentType, body]);\n        }\n\n        if (process.env.SPOTLIGHT_CAPTURE || incomingPayload) {\n          const timestamp = BigInt(Date.now()) * 1_000_000n + (process.hrtime.bigint() % 1_000_000n);\n          const filename = `${contentType?.replace(/[^a-z0-9]/gi, \"_\") || \"no_content_type\"}-${timestamp}.txt`;\n\n          if (incomingPayload) {\n            incomingPayload(body.toString(\"binary\"));\n          } else {\n            try {\n              createWriteStream(filename).write(body);\n              logger.info(`🗃️ Saved data to ${filename}`);\n            } catch (err) {\n              logger.error(`Failed to save data to ${filename}: ${err}`);\n            }\n          }\n        }\n\n        // 204 would be more appropriate but returning 200 to match what /envelope returns\n        res.writeHead(200, {\n          \"Cache-Control\": \"no-cache\",\n          Connection: \"keep-alive\",\n        });\n        res.end();\n      });\n    } else {\n      error405(req, res);\n      return;\n    }\n  };\n};\n\nconst fileServer = (filesToServe: Record<string, Buffer>) => {\n  return function serveFile(req: IncomingMessage, res: ServerResponse, pathname?: string): void {\n    let filePath = `${pathname || req.url}`;\n    if (filePath === \"/\") {\n      filePath = \"/src/index.html\";\n    }\n    filePath = filePath.slice(1);\n\n    const extName = extname(filePath);\n    let contentType = \"text/html\";\n    switch (extName) {\n      case \".js\":\n        contentType = \"text/javascript\";\n        break;\n      case \".css\":\n        contentType = \"text/css\";\n        break;\n      case \".json\":\n        contentType = \"application/json\";\n        break;\n    }\n\n    if (!Object.hasOwn(filesToServe, filePath)) {\n      error404(req, res);\n    } else {\n      res.writeHead(200, {\n        // Enable profiling in browser\n        \"Document-Policy\": \"js-profiling\",\n        \"Content-Type\": contentType,\n      });\n      res.end(filesToServe[filePath]);\n    }\n  };\n};\n\nfunction handleHealthRequest(_req: IncomingMessage, res: ServerResponse): void {\n  res.writeHead(200, {\n    \"Content-Type\": \"text/plain\",\n    ...CORS_HEADERS,\n    ...SPOTLIGHT_HEADERS,\n  });\n  res.end(\"OK\");\n}\n\nfunction handleClearRequest(req: IncomingMessage, res: ServerResponse): void {\n  if (req.method === \"DELETE\") {\n    res.writeHead(200, {\n      \"Content-Type\": \"text/plain\",\n    });\n    clearBuffer();\n    res.end(\"Cleared\");\n  } else {\n    error405(req, res);\n  }\n}\n\nfunction openRequestHandler(basePath: string = process.cwd()) {\n  return (req: IncomingMessage, res: ServerResponse) => {\n    // We're only interested in handling a POST request\n    if (req.method !== \"POST\") {\n      res.writeHead(405);\n      res.end();\n      return;\n    }\n\n    let requestBody = \"\";\n    req.on(\"data\", chunk => {\n      requestBody += chunk;\n    });\n\n    req.on(\"end\", () => {\n      const targetPath = resolve(basePath, requestBody);\n      logger.debug(`Launching editor for ${targetPath}`);\n      launchEditor(\n        // filename:line:column\n        // both line and column are optional\n        targetPath,\n        // callback if failed to launch (optional)\n        (fileName: string, errorMsg: string) => {\n          logger.error(`Failed to launch editor for ${fileName}: ${errorMsg}`);\n        },\n      );\n      res.writeHead(204);\n      res.end();\n    });\n  };\n}\n\nfunction errorResponse(code: number) {\n  return withTracing(\n    (_req: IncomingMessage, res: ServerResponse) => {\n      res.writeHead(code);\n      res.end();\n    },\n    { name: `HTTP ${code}`, op: `sidecar.http.error.${code}`, attributes: { \"http.response.status_code\": code } },\n  );\n}\n\nconst error404 = errorResponse(404);\nconst error405 = errorResponse(405);\n\nfunction logSpotlightUrl(port: number): void {\n  logger.info(`You can open: http://localhost:${port} to see the Spotlight overlay directly`);\n}\n\nfunction startServer(\n  buffer: MessageBuffer<Payload>,\n  port: number,\n  basePath?: string,\n  filesToServe?: Record<string, Buffer>,\n  incomingPayload?: IncomingPayloadCallback,\n): Server {\n  if (basePath && !filesToServe) {\n    filesToServe = {\n      \"/src/index.html\": readFileSync(join(basePath, \"src/index.html\")),\n      \"/assets/main.js\": readFileSync(join(basePath, \"assets/main.js\")),\n    };\n  }\n  const ROUTES: [RegExp, RequestHandler][] = [\n    [/^\\/health$/, handleHealthRequest],\n    [/^\\/clear$/, enableCORS(handleClearRequest)],\n    [/^\\/stream$|^\\/api\\/\\d+\\/envelope\\/?$/, enableCORS(streamRequestHandler(buffer, incomingPayload))],\n    [/^\\/open$/, enableCORS(openRequestHandler(basePath))],\n    [RegExp(`^${CONTEXT_LINES_ENDPOINT}$`), enableCORS(contextLinesHandler)],\n    [/^.+$/, filesToServe != null ? enableCORS(fileServer(filesToServe)) : error404],\n  ];\n\n  const server = createServer((req: IncomingMessage, res: ServerResponse) => {\n    const url = req.url;\n    if (!url) {\n      return error404(req, res);\n    }\n\n    const host = req.headers.host || \"localhost\";\n    const { pathname, searchParams } = new URL(url, `http://${host}`);\n    const route = ROUTES.find(route => route[0].test(pathname));\n    if (!route) {\n      return error404(req, res);\n    }\n    return startSpan(\n      {\n        name: `HTTP ${req.method} ${pathname}`,\n        op: `sidecar.http.${req.method?.toLowerCase()}`,\n        forceTransaction: true,\n        attributes: {\n          \"http.request.method\": req.method,\n          \"http.request.url\": url,\n          \"http.request.query\": searchParams.toString(),\n          \"server.address\": host,\n          \"server.port\": req.socket.localPort,\n        },\n      },\n      span => {\n        const traceData = getTraceData();\n        res.appendHeader(\n          \"server-timing\",\n          [\n            `sentryTrace;desc=\"${traceData[\"sentry-trace\"]}\"`,\n            `baggage;desc=\"${traceData.baggage}\"`,\n            `sentrySpotlightPort;desc=${port}`,\n          ].join(\", \"),\n        );\n        const result = route[1](req, res, pathname, searchParams);\n        span.setAttribute(\"http.response.status_code\", res.statusCode);\n        return result;\n      },\n    );\n  });\n\n  server.on(\"error\", handleServerError);\n\n  server.listen(port, () => {\n    handleServerListen(port, basePath);\n  });\n\n  return server;\n\n  function handleServerError(e: { code?: string }): void {\n    if (\"code\" in e && e.code === \"EADDRINUSE\") {\n      logger.info(`Port ${port} in use, retrying...`);\n      server.close();\n      portInUseRetryTimeout = setTimeout(() => {\n        server.listen(port);\n      }, 5000);\n    } else {\n      captureException(e);\n    }\n  }\n\n  function handleServerListen(port: number, basePath?: string): void {\n    logger.info(`Sidecar listening on ${port}`);\n    if (basePath) {\n      logSpotlightUrl(port);\n    }\n  }\n}\n\nlet serverInstance: Server;\nlet portInUseRetryTimeout: NodeJS.Timeout | null = null;\nconst buffer: MessageBuffer<Payload> = new MessageBuffer<Payload>();\n\nconst isValidPort = withTracing(\n  (value: string | number) => {\n    if (typeof value === \"string\") {\n      const portNumber = Number(value);\n      return /^\\d+$/.test(value) && portNumber > 0 && portNumber <= 65535;\n    }\n    return value > 0 && value <= 65535;\n  },\n  { name: \"isValidPort\", op: \"sidecar.server.portCheck\" },\n);\n\nconst isSidecarRunning = withTracing(\n  (port: string | number | undefined) =>\n    new Promise(_resolve => {\n      logger.info(`Checking if we are already running on port ${port}`);\n      const options = {\n        hostname: \"localhost\",\n        port: port,\n        path: \"/health\",\n        method: \"GET\",\n        // This is only the socket timeout so set up\n        // a connection timeout below manually\n        timeout: 1000,\n        headers: { Connection: \"close\" },\n      };\n\n      let timeoutId: NodeJS.Timeout | null = null;\n      const healthReq = get(options, res => {\n        const serverIdentifier = res.headers[\"x-powered-by\"];\n        if (serverIdentifier === \"spotlight-by-sentry\") {\n          resolve(true);\n        } else {\n          resolve(false);\n        }\n      });\n      const destroyHealthReq = () => !healthReq.destroyed && healthReq.destroy(new Error(\"Request timed out.\"));\n      function resolve(value: boolean) {\n        process.off(\"SIGINT\", destroyHealthReq);\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        _resolve(value);\n      }\n      process.on(\"SIGINT\", destroyHealthReq);\n      timeoutId = setTimeout(destroyHealthReq, 2000);\n      healthReq.on(\"error\", () => {\n        resolve(false);\n      });\n      healthReq.end();\n    }),\n  { name: \"isSidecarRunning\", op: \"sidecar.server.collideCheck\" },\n);\n\nexport function setupSidecar({\n  port,\n  logger: customLogger,\n  basePath,\n  filesToServe,\n  debug,\n  incomingPayload,\n  isStandalone,\n}: SideCarOptions = {}): void {\n  if (!isStandalone) {\n    addEventProcessor(event => (event.spans?.some(span => span.op?.startsWith(\"sidecar.\")) ? null : event));\n  }\n  let sidecarPort = DEFAULT_PORT;\n\n  if (customLogger) {\n    activateLogger(customLogger);\n  }\n\n  if (debug || process.env.SPOTLIGHT_DEBUG) {\n    enableDebugLogging(true);\n  }\n\n  if (port && !isValidPort(port)) {\n    logger.info(\"Please provide a valid port.\");\n    process.exit(1);\n  } else if (port) {\n    sidecarPort = typeof port === \"string\" ? Number(port) : port;\n  }\n\n  isSidecarRunning(sidecarPort).then((isRunning: boolean) => {\n    if (isRunning) {\n      logger.info(`Sidecar is already running on port ${sidecarPort}`);\n      const hasSpotlightUI = (filesToServe && \"/src/index.html\" in filesToServe) || (!filesToServe && basePath);\n      if (hasSpotlightUI) {\n        logSpotlightUrl(sidecarPort);\n      }\n    } else if (!serverInstance) {\n      serverInstance = startServer(buffer, sidecarPort, basePath, filesToServe, incomingPayload);\n    }\n  });\n}\n\nexport function clearBuffer(): void {\n  buffer.clear();\n}\n\nlet forceShutdown = false;\nexport const shutdown = () => {\n  if (portInUseRetryTimeout) {\n    clearTimeout(portInUseRetryTimeout);\n  }\n  if (forceShutdown || !serverInstance) {\n    logger.info(\"Bye.\");\n    process.exit(0);\n  }\n  if (serverInstance) {\n    forceShutdown = true;\n    logger.info(\"Shutting down server gracefully...\");\n    serverInstance.close();\n    serverInstance.closeAllConnections();\n    serverInstance.unref();\n  }\n};\n\nprocess.on(\"SIGINT\", shutdown);\nprocess.on(\"SIGTERM\", shutdown);\n"],"names":["getGeneratedCodeFromServer","filename","parseStackTrace","requestBody","applySourceContextToFrame","sourceMapContent","frame","tracer","TraceMap","originalPosition","originalPositionFor","LEAST_UPPER_BOUND","filePath","path","content","sourceContentFor","lines","os","addContextLinesToFrame","linesOfContext","maxLines","sourceLine","line","snipLine","colno","newLine","lineLength","start","end","isValidSentryStackFrame","contextLinesHandler","req","res","chunk","stacktrace","generatedCode","inlineSourceMapMatch","sourceMapBase64","readFileSync","err","responseJson","defaultLogger","message","debugEnabled","injectedLogger","activateLogger","logger","enableDebugLogging","debug","MessageBuffer","size","__publicField","item","curTime","minTime","atItem","callback","readerId","generateUuidv4","readPos","cb","atReadPos","dt","c","rnd","withTracing","fn","spanArgs","args","startSpan","CORS_HEADERS","SPOTLIGHT_HEADERS","SERVER_IDENTIFIER","enableCORS","handler","pathname","searchParams","headers","header","value","streamRequestHandler","buffer","incomingPayload","useBase64","base64Indicator","dataWriter","data","sub","payloadType","stream","encoding","createGunzip","createInflate","buffers","body","contentType","_a","_b","timestamp","createWriteStream","error405","fileServer","filesToServe","extName","extname","error404","handleHealthRequest","_req","handleClearRequest","clearBuffer","openRequestHandler","basePath","targetPath","resolve","launchEditor","fileName","errorMsg","errorResponse","code","logSpotlightUrl","port","startServer","join","ROUTES","CONTEXT_LINES_ENDPOINT","server","createServer","url","host","route","span","traceData","getTraceData","result","handleServerError","handleServerListen","e","portInUseRetryTimeout","captureException","serverInstance","isValidPort","portNumber","isSidecarRunning","_resolve","options","timeoutId","healthReq","get","serverIdentifier","destroyHealthReq","setupSidecar","customLogger","isStandalone","addEventProcessor","event","sidecarPort","DEFAULT_PORT","isRunning","forceShutdown","shutdown"],"mappings":"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"}