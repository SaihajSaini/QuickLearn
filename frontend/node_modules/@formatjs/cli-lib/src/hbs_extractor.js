"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseFile = parseFile;
const ember_template_recast_1 = require("ember-template-recast");
function extractText(node, fileName, options) {
    if (!options.onMsgExtracted)
        return;
    if (!options.overrideIdFn)
        return;
    if (node.path.type !== 'PathExpression')
        return;
    if (['format-message', 'formatMessage'].includes(node.path.original)) {
        let [first, second] = node.params;
        if (first.type !== 'StringLiteral')
            return;
        let message = first?.value;
        let desc;
        if (second?.type === 'StringLiteral') {
            desc = second.value?.trim().replace(/\s+/gm, ' ');
        }
        let defaultMessage = message?.trim().replace(/\s+/gm, ' ');
        let id = typeof options.overrideIdFn === 'string'
            ? options.overrideIdFn
            : options.overrideIdFn(undefined, defaultMessage, desc, fileName);
        options.onMsgExtracted(fileName, [
            {
                id: id,
                defaultMessage: defaultMessage,
                description: desc,
            },
        ]);
    }
}
function parseFile(source, fileName, options) {
    let visitor = function () {
        return {
            MustacheStatement(node) {
                extractText(node, fileName, options);
            },
            SubExpression(node) {
                extractText(node, fileName, options);
            },
        };
    };
    // SAFETY: ember-template-recast's types are out of date,
    // but it does not affect runtime
    (0, ember_template_recast_1.transform)(source, visitor);
}
