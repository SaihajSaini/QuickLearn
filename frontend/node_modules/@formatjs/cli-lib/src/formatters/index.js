"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveBuiltinFormatter = resolveBuiltinFormatter;
const tslib_1 = require("tslib");
const path_1 = require("path");
const url_1 = require("url");
const crowdin = tslib_1.__importStar(require("./crowdin"));
const defaultFormatter = tslib_1.__importStar(require("./default"));
const lokalise = tslib_1.__importStar(require("./lokalise"));
const simple = tslib_1.__importStar(require("./simple"));
const smartling = tslib_1.__importStar(require("./smartling"));
const transifex = tslib_1.__importStar(require("./transifex"));
async function resolveBuiltinFormatter(format) {
    if (!format) {
        return defaultFormatter;
    }
    if (typeof format !== 'string') {
        return format;
    }
    switch (format) {
        case 'transifex':
            return transifex;
        case 'smartling':
            return smartling;
        case 'simple':
            return simple;
        case 'lokalise':
            return lokalise;
        case 'crowdin':
            return crowdin;
    }
    try {
        // eslint-disable-next-line import/dynamic-import-chunkname
        return import((0, url_1.pathToFileURL)((0, path_1.resolve)(process.cwd(), format)).href);
    }
    catch (e) {
        console.error(`Cannot resolve formatter ${format}`);
        throw e;
    }
}
