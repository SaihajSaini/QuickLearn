{"version":3,"file":"constructTurbopackConfig.js","sources":["../../../../src/config/turbopack/constructTurbopackConfig.ts"],"sourcesContent":["import { debug } from '@sentry/core';\nimport * as chalk from 'chalk';\nimport * as path from 'path';\nimport type { RouteManifest } from '../manifest/types';\nimport type { NextConfigObject, TurbopackOptions, TurbopackRuleConfigItemOrShortcut } from '../types';\n\n/**\n * Construct a Turbopack config object from a Next.js config object and a Turbopack options object.\n *\n * @param userNextConfig - The Next.js config object.\n * @param turbopackOptions - The Turbopack options object.\n * @returns The Turbopack config object.\n */\nexport function constructTurbopackConfig({\n  userNextConfig,\n  routeManifest,\n}: {\n  userNextConfig: NextConfigObject;\n  routeManifest?: RouteManifest;\n}): TurbopackOptions {\n  const newConfig: TurbopackOptions = {\n    ...userNextConfig.turbopack,\n  };\n\n  if (routeManifest) {\n    newConfig.rules = safelyAddTurbopackRule(newConfig.rules, {\n      matcher: '**/instrumentation-client.*',\n      rule: {\n        loaders: [\n          {\n            loader: path.resolve(__dirname, '..', 'loaders', 'valueInjectionLoader.js'),\n            options: {\n              values: {\n                _sentryRouteManifest: JSON.stringify(routeManifest),\n              },\n            },\n          },\n        ],\n      },\n    });\n  }\n\n  return newConfig;\n}\n\n/**\n * Safely add a Turbopack rule to the existing rules.\n *\n * @param existingRules - The existing rules.\n * @param matcher - The matcher for the rule.\n * @param rule - The rule to add.\n * @returns The updated rules object.\n */\nexport function safelyAddTurbopackRule(\n  existingRules: TurbopackOptions['rules'],\n  { matcher, rule }: { matcher: string; rule: TurbopackRuleConfigItemOrShortcut },\n): TurbopackOptions['rules'] {\n  if (!existingRules) {\n    return {\n      [matcher]: rule,\n    };\n  }\n\n  // If the rule already exists, we don't want to mess with it.\n  if (existingRules[matcher]) {\n    debug.log(\n      `${chalk.cyan(\n        'info',\n      )} - Turbopack rule already exists for ${matcher}. Please remove it from your Next.js config in order for Sentry to work properly.`,\n    );\n    return existingRules;\n  }\n\n  return {\n    ...existingRules,\n    [matcher]: rule,\n  };\n}\n"],"names":["debug"],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,wBAAwB,CAAC;AACzC,EAAE,cAAc;AAChB,EAAE,aAAa;AACf;;AAGA,EAAqB;AACrB,EAAE,MAAM,SAAS,GAAqB;AACtC,IAAI,GAAG,cAAc,CAAC,SAAS;AAC/B,GAAG;;AAEH,EAAE,IAAI,aAAa,EAAE;AACrB,IAAI,SAAS,CAAC,KAAA,GAAQ,sBAAsB,CAAC,SAAS,CAAC,KAAK,EAAE;AAC9D,MAAM,OAAO,EAAE,6BAA6B;AAC5C,MAAM,IAAI,EAAE;AACZ,QAAQ,OAAO,EAAE;AACjB,UAAU;AACV,YAAY,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,yBAAyB,CAAC;AACvF,YAAY,OAAO,EAAE;AACrB,cAAc,MAAM,EAAE;AACtB,gBAAgB,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;AACnE,eAAe;AACf,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK,CAAC;AACN;;AAEA,EAAE,OAAO,SAAS;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,sBAAsB;AACtC,EAAE,aAAa;AACf,EAAE,EAAE,OAAO,EAAE,IAAA,EAAM;AACnB,EAA6B;AAC7B,EAAE,IAAI,CAAC,aAAa,EAAE;AACtB,IAAI,OAAO;AACX,MAAM,CAAC,OAAO,GAAG,IAAI;AACrB,KAAK;AACL;;AAEA;AACA,EAAE,IAAI,aAAa,CAAC,OAAO,CAAC,EAAE;AAC9B,IAAIA,UAAK,CAAC,GAAG;AACb,MAAM,CAAC,EAAA,KAAA,CAAA,IAAA;AACA,QAAA,MAAA;AACA,OAAA,CAAA,qCAAA,EAAA,OAAA,CAAA,iFAAA,CAAA;AACA,KAAA;AACA,IAAA,OAAA,aAAA;AACA;;AAEA,EAAA,OAAA;AACA,IAAA,GAAA,aAAA;AACA,IAAA,CAAA,OAAA,GAAA,IAAA;AACA,GAAA;AACA;;;;;"}