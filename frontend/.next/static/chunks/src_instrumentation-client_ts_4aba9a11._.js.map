{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ranveersingh/QuickLearn/frontend/src/instrumentation-client.ts"],"sourcesContent":["// This file configures the initialization of Sentry on the client.\n// The added config here will be used whenever a users loads a page in their browser.\n// https://docs.sentry.io/platforms/javascript/guides/nextjs/\n;globalThis[\"_sentryRouteManifest\"] = \"{\\\"dynamicRoutes\\\":[{\\\"path\\\":\\\"/:locale/sign-in/:sign-in*?\\\",\\\"regex\\\":\\\"^/([^/]+)/sign-in(?:/(.*))?$\\\",\\\"paramNames\\\":[\\\"locale\\\",\\\"sign-in\\\"]},{\\\"path\\\":\\\"/:locale/sign-up/:sign-up*?\\\",\\\"regex\\\":\\\"^/([^/]+)/sign-up(?:/(.*))?$\\\",\\\"paramNames\\\":[\\\"locale\\\",\\\"sign-up\\\"]},{\\\"path\\\":\\\"/:locale/dashboard\\\",\\\"regex\\\":\\\"^/([^/]+)/dashboard$\\\",\\\"paramNames\\\":[\\\"locale\\\"]},{\\\"path\\\":\\\"/:locale/dashboard/user-profile/:user-profile*?\\\",\\\"regex\\\":\\\"^/([^/]+)/dashboard/user-profile(?:/(.*))?$\\\",\\\"paramNames\\\":[\\\"locale\\\",\\\"user-profile\\\"]},{\\\"path\\\":\\\"/:locale\\\",\\\"regex\\\":\\\"^/([^/]+)$\\\",\\\"paramNames\\\":[\\\"locale\\\"]},{\\\"path\\\":\\\"/:locale/about\\\",\\\"regex\\\":\\\"^/([^/]+)/about$\\\",\\\"paramNames\\\":[\\\"locale\\\"]},{\\\"path\\\":\\\"/:locale/counter\\\",\\\"regex\\\":\\\"^/([^/]+)/counter$\\\",\\\"paramNames\\\":[\\\"locale\\\"]},{\\\"path\\\":\\\"/:locale/portfolio\\\",\\\"regex\\\":\\\"^/([^/]+)/portfolio$\\\",\\\"paramNames\\\":[\\\"locale\\\"]},{\\\"path\\\":\\\"/:locale/portfolio/:slug\\\",\\\"regex\\\":\\\"^/([^/]+)/portfolio/([^/]+)$\\\",\\\"paramNames\\\":[\\\"locale\\\",\\\"slug\\\"]}],\\\"staticRoutes\\\":[]}\";import * as Sentry from '@sentry/nextjs';\nimport * as Spotlight from '@spotlightjs/spotlight';\n\nif (!process.env.NEXT_PUBLIC_SENTRY_DISABLED) {\n  Sentry.init({\n    dsn: process.env.NEXT_PUBLIC_SENTRY_DSN,\n\n    // Add optional integrations for additional features\n    integrations: [\n      Sentry.replayIntegration(),\n      Sentry.consoleLoggingIntegration(),\n    ],\n\n    // Adds request headers and IP for users, for more info visit\n    sendDefaultPii: true,\n\n    // Define how likely traces are sampled. Adjust this value in production, or use tracesSampler for greater control.\n    tracesSampleRate: 1,\n\n    // Define how likely Replay events are sampled.\n    // This sets the sample rate to be 10%. You may want this to be 100% while\n    // in development and sample at a lower rate in production\n    replaysSessionSampleRate: 0.1,\n\n    // Define how likely Replay events are sampled when an error occurs.\n    replaysOnErrorSampleRate: 1.0,\n\n    // Enable logs to be sent to Sentry\n    _experiments: { enableLogs: true },\n\n    // Setting this option to true will print useful information to the console while you're setting up Sentry.\n    debug: false,\n  });\n\n  if (process.env.NODE_ENV === 'development') {\n    Spotlight.init();\n  }\n}\n\nexport const onRouterTransitionStart = Sentry.captureRouterTransitionStart;\n"],"names":[],"mappings":"AAAA,mEAAmE;AACnE,qFAAqF;AACrF,6DAA6D;;;;AAIxD;AAH4iC;AAAA;AAAA;AAAA;AACjjC;AAAA;AADC,UAAU,CAAC,uBAAuB,GAAG;;;AAGtC,IAAI,CAAC,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE;IAC5C,wLAAA,CAAA,OAAW,CAAC;QACV,KAAK,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,sBAAsB;QAEvC,oDAAoD;QACpD,cAAc;YACZ,iLAAA,CAAA,oBAAwB;YACxB,qLAAA,CAAA,4BAAgC;SACjC;QAED,6DAA6D;QAC7D,gBAAgB;QAEhB,mHAAmH;QACnH,kBAAkB;QAElB,+CAA+C;QAC/C,0EAA0E;QAC1E,0DAA0D;QAC1D,0BAA0B;QAE1B,oEAAoE;QACpE,0BAA0B;QAE1B,mCAAmC;QACnC,cAAc;YAAE,YAAY;QAAK;QAEjC,2GAA2G;QAC3G,OAAO;IACT;IAEA,wCAA4C;QAC1C,0KAAA,CAAA,OAAc;IAChB;AACF;AAEO,MAAM,0BAA0B,6MAAA,CAAA,+BAAmC","debugId":null}}]
}